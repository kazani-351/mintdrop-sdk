interface ITokenURIGenerator {
  function tokenURI(uint256 tokenId) external view returns (string memory);
}

// Metadata
/**
@notice If set, contract to which tokenURI() calls are proxied.
  */
ITokenURIGenerator public renderingContract;

/**
@notice Sets the optional tokenURI override contract.
  */
function setRenderingContract(ITokenURIGenerator _contract)
  external
  onlyOwner
{
  renderingContract = _contract;
}

/**
@notice If renderingContract is set then returns its tokenURI(tokenId)
return value, otherwise returns the standard baseTokenURI + tokenId.
  */
function tokenURI(uint256 tokenId)
  public
  view
  override
  returns (string memory)
{
  if (address(renderingContract) != address(0)) {
    return renderingContract.tokenURI(tokenId);
  }
  return super.tokenURI(tokenId);
}

/** 
@dev override multiple baseURI functions to use the BaseTokenURI lib
  */
function _baseURI()
  internal
  view
  virtual
  override(BaseTokenURI, ERC721A)
  returns (string memory)
{
  return BaseTokenURI.baseTokenURI;
}